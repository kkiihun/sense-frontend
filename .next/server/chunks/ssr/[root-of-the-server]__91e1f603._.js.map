{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///Users/kimkihun/Documents/project/sense_homepage/sense-frontend/components/EmotionChart.tsx"],"sourcesContent":["// components/EmotionChart.tsx\nimport {\n    Chart as ChartJS,\n    ArcElement,\n    Tooltip,\n    Legend,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n  } from 'chart.js';\n  import { Pie, Bar } from 'react-chartjs-2';\n  import { useEffect, useState } from 'react';\n  \n  ChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title);\n  \n  interface Record {\n    id: number;\n    sense_type: string;\n    emotion_score: number;\n  }\n  \n  export default function EmotionChart() {\n    const [records, setRecords] = useState<Record[]>([]);\n  \n    useEffect(() => {\n      fetch('http://192.168.1.143:8000/records')\n        .then((res) => res.json())\n        .then((data) => setRecords(data));\n    }, []);\n  \n    const grouped = records.reduce((acc: RecordMap, curr) => {\n      const type = curr.sense_type;\n      if (!acc[type]) acc[type] = [];\n      acc[type].push(curr.emotion_score);\n      return acc;\n    }, {});\n  \n    const labels = Object.keys(grouped);\n    const data = labels.map((label) => {\n      const scores = grouped[label];\n      const avg = scores.reduce((a, b) => a + b, 0) / scores.length;\n      return Number(avg.toFixed(2));\n    });\n  \n    return (\n      <div className=\"max-w-4xl mx-auto my-10\">\n        <h2 className=\"text-xl font-bold mb-4 text-center\">감각 유형별 평균 감정 점수</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          <div>\n            <Pie\n              data={{\n                labels,\n                datasets: [\n                  {\n                    label: '평균 감정점수',\n                    data,\n                    backgroundColor: [\n                      '#f87171', '#fbbf24', '#34d399', '#60a5fa', '#c084fc'\n                    ],\n                  },\n                ],\n              }}\n            />\n          </div>\n          <div>\n            <Bar\n              options={{\n                responsive: true,\n                plugins: {\n                  legend: { display: false },\n                  title: {\n                    display: true,\n                    text: 'Bar Chart - 감정 점수 평균',\n                  },\n                },\n              }}\n              data={{\n                labels,\n                datasets: [\n                  {\n                    label: '평균 감정점수',\n                    data,\n                    backgroundColor: '#4f46e5',\n                  },\n                ],\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  type RecordMap = {\n    [key: string]: number[];\n  };\n  "],"names":[],"mappings":"AAAA,8BAA8B;;;;;AAC9B;AAUE;AACA;;;;;;;;;;AAEA,sHAAA,CAAA,QAAO,CAAC,QAAQ,CAAC,sHAAA,CAAA,aAAU,EAAE,sHAAA,CAAA,UAAO,EAAE,sHAAA,CAAA,SAAM,EAAE,sHAAA,CAAA,gBAAa,EAAE,sHAAA,CAAA,cAAW,EAAE,sHAAA,CAAA,aAAU,EAAE,sHAAA,CAAA,QAAK;AAQ5E,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAEnD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,qCACH,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI,IACtB,IAAI,CAAC,CAAC,OAAS,WAAW;IAC/B,GAAG,EAAE;IAEL,MAAM,UAAU,QAAQ,MAAM,CAAC,CAAC,KAAgB;QAC9C,MAAM,OAAO,KAAK,UAAU;QAC5B,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,GAAG,EAAE;QAC9B,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,aAAa;QACjC,OAAO;IACT,GAAG,CAAC;IAEJ,MAAM,SAAS,OAAO,IAAI,CAAC;IAC3B,MAAM,OAAO,OAAO,GAAG,CAAC,CAAC;QACvB,MAAM,SAAS,OAAO,CAAC,MAAM;QAC7B,MAAM,MAAM,OAAO,MAAM,CAAC,CAAC,GAAG,IAAM,IAAI,GAAG,KAAK,OAAO,MAAM;QAC7D,OAAO,OAAO,IAAI,OAAO,CAAC;IAC5B;IAEA,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAG,WAAU;0BAAqC;;;;;;0BACnD,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;kCACC,cAAA,qKAAC,0IAAA,CAAA,MAAG;4BACF,MAAM;gCACJ;gCACA,UAAU;oCACR;wCACE,OAAO;wCACP;wCACA,iBAAiB;4CACf;4CAAW;4CAAW;4CAAW;4CAAW;yCAC7C;oCACH;iCACD;4BACH;;;;;;;;;;;kCAGJ,qKAAC;kCACC,cAAA,qKAAC,0IAAA,CAAA,MAAG;4BACF,SAAS;gCACP,YAAY;gCACZ,SAAS;oCACP,QAAQ;wCAAE,SAAS;oCAAM;oCACzB,OAAO;wCACL,SAAS;wCACT,MAAM;oCACR;gCACF;4BACF;4BACA,MAAM;gCACJ;gCACA,UAAU;oCACR;wCACE,OAAO;wCACP;wCACA,iBAAiB;oCACnB;iCACD;4BACH;;;;;;;;;;;;;;;;;;;;;;;AAMZ","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///Users/kimkihun/Documents/project/sense_homepage/sense-frontend/components/UploadForm.tsx"],"sourcesContent":["// components/UploadForm.tsx\nimport { useState } from \"react\";\n\ninterface Props {\n  onUploadSuccess: () => void;\n}\n\nexport default function UploadForm({ onUploadSuccess }: Props) {\n  const getCurrentDateTimeLocal = (): string => {\n    const now = new Date();\n    const offset = now.getTimezoneOffset();\n    const local = new Date(now.getTime() - offset * 60 * 1000);\n    return local.toISOString().slice(0, 16); // YYYY-MM-DDTHH:MM\n  };\n\n  const [form, setForm] = useState({\n    date: getCurrentDateTimeLocal(),\n    location: \"\",\n    sense_type: \"\",\n    keyword: \"\",\n    emotion_score: \"\",\n    description: \"\",\n  });\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const { name, value } = e.target;\n    setForm({ ...form, [name]: value });\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const res = await fetch(\"http://localhost:8000/upload\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(form),\n    });\n    if (res.ok) {\n      alert(\"성공적으로 업로드되었습니다!\");\n      setForm({\n        date: getCurrentDateTimeLocal(),\n        location: \"\",\n        sense_type: \"\",\n        keyword: \"\",\n        emotion_score: \"\",\n        description: \"\",\n      });\n      onUploadSuccess();  // ← 여기서 상위 컴포넌트에 알립니다.\n    } else {\n      alert(\"업로드 실패\");\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className=\"space-y-4 bg-gray-100 p-6 rounded shadow\"\n    >\n      <input\n        type=\"datetime-local\"\n        name=\"date\"\n        value={form.date}\n        onChange={handleChange}\n        className=\"input\"\n        required\n      />\n      <input\n        name=\"location\"\n        value={form.location}\n        onChange={handleChange}\n        placeholder=\"장소\"\n        className=\"input\"\n        required\n      />\n      <input\n        name=\"sense_type\"\n        value={form.sense_type}\n        onChange={handleChange}\n        placeholder=\"감각유형 (예: 맛, 향)\"\n        className=\"input\"\n        required\n      />\n      <input\n        name=\"keyword\"\n        value={form.keyword}\n        onChange={handleChange}\n        placeholder=\"키워드\"\n        className=\"input\"\n      />\n      <input\n        name=\"emotion_score\"\n        type=\"number\"\n        value={form.emotion_score}\n        onChange={handleChange}\n        placeholder=\"감정점수 (-5 ~ 5)\"\n        className=\"input\"\n      />\n      <textarea\n        name=\"description\"\n        value={form.description}\n        onChange={handleChange}\n        placeholder=\"감정 설명\"\n        className=\"input\"\n      />\n      <button\n        type=\"submit\"\n        className=\"bg-orange-500 text-white px-4 py-2 rounded\"\n      >\n        등록\n      </button>\n    </form>\n  );\n}\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;;AAC5B;;;AAMe,SAAS,WAAW,EAAE,eAAe,EAAS;IAC3D,MAAM,0BAA0B;QAC9B,MAAM,MAAM,IAAI;QAChB,MAAM,SAAS,IAAI,iBAAiB;QACpC,MAAM,QAAQ,IAAI,KAAK,IAAI,OAAO,KAAK,SAAS,KAAK;QACrD,OAAO,MAAM,WAAW,GAAG,KAAK,CAAC,GAAG,KAAK,mBAAmB;IAC9D;IAEA,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;QAC/B,MAAM;QACN,UAAU;QACV,YAAY;QACZ,SAAS;QACT,eAAe;QACf,aAAa;IACf;IAEA,MAAM,eAAe,CACnB;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,QAAQ;YAAE,GAAG,IAAI;YAAE,CAAC,KAAK,EAAE;QAAM;IACnC;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,MAAM,MAAM,MAAM,MAAM,gCAAgC;YACtD,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;QACvB;QACA,IAAI,IAAI,EAAE,EAAE;YACV,MAAM;YACN,QAAQ;gBACN,MAAM;gBACN,UAAU;gBACV,YAAY;gBACZ,SAAS;gBACT,eAAe;gBACf,aAAa;YACf;YACA,mBAAoB,uBAAuB;QAC7C,OAAO;YACL,MAAM;QACR;IACF;IAEA,qBACE,qKAAC;QACC,UAAU;QACV,WAAU;;0BAEV,qKAAC;gBACC,MAAK;gBACL,MAAK;gBACL,OAAO,KAAK,IAAI;gBAChB,UAAU;gBACV,WAAU;gBACV,QAAQ;;;;;;0BAEV,qKAAC;gBACC,MAAK;gBACL,OAAO,KAAK,QAAQ;gBACpB,UAAU;gBACV,aAAY;gBACZ,WAAU;gBACV,QAAQ;;;;;;0BAEV,qKAAC;gBACC,MAAK;gBACL,OAAO,KAAK,UAAU;gBACtB,UAAU;gBACV,aAAY;gBACZ,WAAU;gBACV,QAAQ;;;;;;0BAEV,qKAAC;gBACC,MAAK;gBACL,OAAO,KAAK,OAAO;gBACnB,UAAU;gBACV,aAAY;gBACZ,WAAU;;;;;;0BAEZ,qKAAC;gBACC,MAAK;gBACL,MAAK;gBACL,OAAO,KAAK,aAAa;gBACzB,UAAU;gBACV,aAAY;gBACZ,WAAU;;;;;;0BAEZ,qKAAC;gBACC,MAAK;gBACL,OAAO,KAAK,WAAW;gBACvB,UAAU;gBACV,aAAY;gBACZ,WAAU;;;;;;0BAEZ,qKAAC;gBACC,MAAK;gBACL,WAAU;0BACX;;;;;;;;;;;;AAKP","debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///Users/kimkihun/Documents/project/sense_homepage/sense-frontend/pages/index.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport EmotionChart from \"@/components/EmotionChart\";\nimport UploadForm from \"@/components/UploadForm\";\nimport Header from \"@/components/Header\";\n\ninterface Record {\n  id: number;\n  date: string;\n  location: string;\n  sense_type: string;\n  keyword: string;\n  emotion_score: number;\n  description: string;\n}\n\nexport default function Home() {\n  const [records, setRecords] = useState<Record[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchData = () => {\n    setLoading(true);\n    fetch(\"http://192.168.1.143:8000/records\")\n      .then((res) => res.json())\n      .then((data) => {\n        setRecords(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(\"Failed to fetch data:\", err);\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // 최신 6개 (날짜 내림차순 가정)\n  const latestSix = [...records]\n    .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n    .slice(0, 6);\n\n  // 감정점수 상위 5개\n  const topFive = [...records]\n    .sort((a, b) => b.emotion_score - a.emotion_score)\n    .slice(0, 5);\n\n  return (\n    <div className=\"text-gray-800 bg-white font-sans\">\n      {/* 헤더 */}\n      <section className=\"bg-gray-50 py-20 text-center\">\n        <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n          감각 기반 SENSE 데이터마켓\n        </h1>\n        <p className=\"text-gray-600 text-lg\">\n          AI와 감성 데이터를 연결하는 데이터 커머스 플랫폼\n        </p>\n      </section>\n\n      {/* 입력폼 */}\n      <section className=\"py-16 px-6 max-w-4xl mx-auto\">\n        <UploadForm onUploadSuccess={fetchData} />\n      </section>\n\n      {/* 최신 6개 섹션 */}\n      <section className=\"py-16 bg-gray-100 px-6 max-w-6xl mx-auto\">\n        <h2 className=\"text-2xl font-bold text-orange-600 mb-6\">\n          최신 데이터 (최신 6개)\n        </h2>\n        {loading ? (\n          <p>불러오는 중...</p>\n        ) : latestSix.length === 0 ? (\n          <p>기록이 없습니다.</p>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {latestSix.map((rec) => (\n              <div key={rec.id} className=\"bg-white border p-4 rounded shadow\">\n                <p className=\"font-bold\">\n                  {rec.date} – {rec.sense_type} ({rec.keyword})\n                </p>\n                <p className=\"text-sm text-gray-600\">{rec.location}</p>\n                <p className=\"mt-1 text-sm\">감정점수: {rec.emotion_score}</p>\n                <p className=\"text-sm text-gray-700 mt-1\">\n                  {rec.description}\n                </p>\n              </div>\n            ))}\n          </div>\n        )}\n      </section>\n\n      {/* 상위 5개 섹션 */}\n      <section className=\"py-16 bg-white px-6 max-w-6xl mx-auto\">\n        <h2 className=\"text-2xl font-bold text-blue-600 mb-6\">\n          감정점수 상위 5개\n        </h2>\n        {loading ? (\n          <p>불러오는 중...</p>\n        ) : topFive.length === 0 ? (\n          <p>기록이 없습니다.</p>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {topFive.map((rec) => (\n              <div key={rec.id} className=\"bg-white border p-4 rounded shadow\">\n                <p className=\"font-bold\">\n                  {rec.date} – {rec.sense_type} ({rec.keyword})\n                </p>\n                <p className=\"text-sm text-gray-600\">{rec.location}</p>\n                <p className=\"mt-1 text-sm\">감정점수: {rec.emotion_score}</p>\n                <p className=\"text-sm text-gray-700 mt-1\">\n                  {rec.description}\n                </p>\n              </div>\n            ))}\n          </div>\n        )}\n      </section>\n\n      {/* 차트 */}\n      <section className=\"py-16 bg-white px-6 max-w-6xl mx-auto\">\n        <EmotionChart />\n      </section>\n\n      {/* 푸터 */}\n      <footer className=\"bg-white border-t py-8 mt-12\">\n        <div className=\"text-center text-sm text-gray-500\">\n          © 2025 SENSE. 모든 권리 보유. | 개인정보처리방침 | 이용약관\n        </div>\n      </footer>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 603, "column": 0}, "map": {"version":3,"sources":["file:///Users/kimkihun/Documents/project/sense_homepage/sense-frontend/node_modules/next/dist/src/server/route-modules/pages/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-turbo.runtime.dev.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages.runtime.dev.js')\n    }\n  } else {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1C,IAAIN,QAAQC,GAAG,CAACM,SAAS,eAAE;YACzBJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO;;QAEP;IACF,OAAO;;IAMP;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 622, "column": 0}, "map": {"version":3,"sources":["file:///Users/kimkihun/Documents/project/sense_homepage/sense-frontend/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 651, "column": 0}, "map": {"version":3,"sources":["file:///Users/kimkihun/Documents/project/sense_homepage/sense-frontend/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 684, "column": 0}, "map": {"version":3,"sources":["file:///Users/kimkihun/Documents/project/sense_homepage/sense-frontend/node_modules/next/dist/src/build/templates/pages.ts"],"sourcesContent":["import { PagesRouteModule } from '../../server/route-modules/pages/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\nimport { hoist } from './helpers'\n\n// Import the app and document modules.\nimport * as document from 'VAR_MODULE_DOCUMENT'\nimport * as app from 'VAR_MODULE_APP'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the component (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export methods.\nexport const getStaticProps = hoist(userland, 'getStaticProps')\nexport const getStaticPaths = hoist(userland, 'getStaticPaths')\nexport const getServerSideProps = hoist(userland, 'getServerSideProps')\nexport const config = hoist(userland, 'config')\nexport const reportWebVitals = hoist(userland, 'reportWebVitals')\n\n// Re-export legacy methods.\nexport const unstable_getStaticProps = hoist(\n  userland,\n  'unstable_getStaticProps'\n)\nexport const unstable_getStaticPaths = hoist(\n  userland,\n  'unstable_getStaticPaths'\n)\nexport const unstable_getStaticParams = hoist(\n  userland,\n  'unstable_getStaticParams'\n)\nexport const unstable_getServerProps = hoist(\n  userland,\n  'unstable_getServerProps'\n)\nexport const unstable_getServerSideProps = hoist(\n  userland,\n  'unstable_getServerSideProps'\n)\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesRouteModule({\n  definition: {\n    kind: RouteKind.PAGES,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  components: {\n    // default export might not exist when optimized for data only\n    App: app.default,\n    Document: document.default,\n  },\n  userland,\n})\n"],"names":["PagesRouteModule","RouteKind","hoist","document","app","userland","getStaticProps","getStaticPaths","getServerSideProps","config","reportWebVitals","unstable_getStaticProps","unstable_getStaticPaths","unstable_getStaticParams","unstable_getServerProps","unstable_getServerSideProps","routeModule","definition","kind","PAGES","page","pathname","bundlePath","filename","components","App","default","Document"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,gBAAgB,QAAQ,mDAAkD;AACnF,SAASC,SAAS,QAAQ,0BAAyB;AACnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,uCAAuC;AACvC,YAAYC,cAAc,sBAAqB;AAC/C,YAAYC,SAAS,iBAAgB;AAErC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;;;yMAGzBH,QAAAA,EAAMG,0GAAU,WAAU;AAGlC,MAAMC,mLAAiBJ,QAAAA,EAAMG,0GAAU,kBAAiB;AACxD,MAAME,mLAAiBL,QAAAA,EAAMG,0GAAU,kBAAiB;AACxD,MAAMG,uLAAqBN,QAAAA,EAAMG,0GAAU,sBAAqB;AAChE,MAAMI,SAASP,0KAAAA,EAAMG,0GAAU,UAAS;AACxC,MAAMK,oLAAkBR,QAAAA,EAAMG,0GAAU,mBAAkB;AAG1D,MAAMM,0BAA0BT,0KAAAA,EACrCG,0GACA,2BACD;AACM,MAAMO,4LAA0BV,QAAAA,EACrCG,0GACA,2BACD;AACM,MAAMQ,2BAA2BX,0KAAAA,EACtCG,0GACA,4BACD;AACM,MAAMS,4LAA0BZ,QAAAA,EACrCG,0GACA,2BACD;AACM,MAAMU,gMAA8Bb,QAAAA,EACzCG,0GACA,+BACD;AAGM,MAAMW,cAAc,8LAAIhB,mBAAAA,CAAiB;IAC9CiB,YAAY;QACVC,MAAMjB,oKAAAA,CAAUkB,KAAK;QACrBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;IACAC,YAAY;QACV,8DAA8D;QAC9DC,6GAAKrB,IAAIsB,MAAO;QAChBC,oIAAUxB,SAASuB,CAAO;IAC5B;cACArB;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}