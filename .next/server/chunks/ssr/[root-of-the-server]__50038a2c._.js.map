{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/kimkihun/Documents/project/sense_homepage/sense-frontend/components/Header.tsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\"\nimport Link from \"next/link\"\n\nexport default function Header() {\n  const [open, setOpen] = useState(false)\n  const menuRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const handler = (e: MouseEvent) => {\n      if (open && menuRef.current && !menuRef.current.contains(e.target as Node)) {\n        setOpen(false)\n      }\n    }\n    document.addEventListener(\"mousedown\", handler)\n    return () => document.removeEventListener(\"mousedown\", handler)\n  }, [open])\n\n  const items = [\n    { href: \"/map\", label: \"감각지도\" },\n    { href: \"/report\", label: \"감각리포트\" },\n    { href: \"/shop\", label: \"감각상점\" },\n    { href: \"/data-market\", label: \"데이터마켓\" },\n    { href: \"/mypage\", label: \"마이페이지\" },\n  ]\n\n  return (\n    <header className=\"relative bg-white shadow\">\n      <div className=\"max-w-6xl mx-auto px-6 py-4 flex items-center\">\n        {/* 왼쪽: 햄버거 + 로고 */}\n        <div className=\"flex items-center space-x-4\">\n          <button\n            onClick={() => setOpen(o => !o)}\n            className=\"p-2 rounded hover:bg-gray-100\"\n            aria-label=\"메뉴 열기\"\n          >\n            {open ? (\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                  d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            ) : (\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                  d=\"M4 6h16M4 12h16M4 18h16\" />\n              </svg>\n            )}\n          </button>\n          <Link href=\"/\" className=\"text-2xl font-bold text-gray-900\">\n            SENSE\n          </Link>\n        </div>\n\n        {/* 가운데: 검색창 (flex-1로 너비 확보) */}\n        <div className=\"flex-1 mx-8\">\n          <div className=\"flex items-center border border-gray-300 rounded overflow-hidden w-full\">\n            <input\n              type=\"text\"\n              placeholder=\"감각 키워드, 지역 검색\"\n              className=\"flex-1 px-3 py-1 outline-none\"\n            />\n            <button className=\"bg-green-500 text-white px-4 py-1\">\n              검색\n            </button>\n          </div>\n        </div>\n\n        {/* 오른쪽: 로그인 */}\n        <div>\n          <Link href=\"/login\" className=\"text-gray-700 hover:text-gray-900\">\n            로그인\n          </Link>\n        </div>\n      </div>\n\n      {/* 드롭다운 메뉴 */}\n      {open && (\n        <div\n          ref={menuRef}\n          className=\"absolute top-full left-0 w-full bg-white shadow-md z-50\"\n        >\n          <nav className=\"flex flex-col py-4 space-y-2 px-6\">\n            {items.map(({ href, label }) => (\n              <Link\n                key={href}\n                href={href}\n                className=\"block py-2 hover:text-gray-900\"\n                onClick={() => setOpen(false)}\n              >\n                {label}\n              </Link>\n            ))}\n          </nav>\n        </div>\n      )}\n    </header>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,UAAU,CAAA,GAAA,mGAAA,CAAA,SAAM,AAAD,EAAkB;IAEvC,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,UAAU,CAAC;YACf,IAAI,QAAQ,QAAQ,OAAO,IAAI,CAAC,QAAQ,OAAO,CAAC,QAAQ,CAAC,EAAE,MAAM,GAAW;gBAC1E,QAAQ;YACV;QACF;QACA,SAAS,gBAAgB,CAAC,aAAa;QACvC,OAAO,IAAM,SAAS,mBAAmB,CAAC,aAAa;IACzD,GAAG;QAAC;KAAK;IAET,MAAM,QAAQ;QACZ;YAAE,MAAM;YAAQ,OAAO;QAAO;QAC9B;YAAE,MAAM;YAAW,OAAO;QAAQ;QAClC;YAAE,MAAM;YAAS,OAAO;QAAO;QAC/B;YAAE,MAAM;YAAgB,OAAO;QAAQ;QACvC;YAAE,MAAM;YAAW,OAAO;QAAQ;KACnC;IAED,qBACE,qKAAC;QAAO,WAAU;;0BAChB,qKAAC;gBAAI,WAAU;;kCAEb,qKAAC;wBAAI,WAAU;;0CACb,qKAAC;gCACC,SAAS,IAAM,QAAQ,CAAA,IAAK,CAAC;gCAC7B,WAAU;gCACV,cAAW;0CAEV,qBACC,qKAAC;oCAAI,WAAU;oCAAU,MAAK;oCAAO,QAAO;oCAAe,SAAQ;8CACjE,cAAA,qKAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAC9D,GAAE;;;;;;;;;;yDAGN,qKAAC;oCAAI,WAAU;oCAAU,MAAK;oCAAO,QAAO;oCAAe,SAAQ;8CACjE,cAAA,qKAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAC9D,GAAE;;;;;;;;;;;;;;;;0CAIV,qKAAC,qHAAA,CAAA,UAAI;gCAAC,MAAK;gCAAI,WAAU;0CAAmC;;;;;;;;;;;;kCAM9D,qKAAC;wBAAI,WAAU;kCACb,cAAA,qKAAC;4BAAI,WAAU;;8CACb,qKAAC;oCACC,MAAK;oCACL,aAAY;oCACZ,WAAU;;;;;;8CAEZ,qKAAC;oCAAO,WAAU;8CAAoC;;;;;;;;;;;;;;;;;kCAO1D,qKAAC;kCACC,cAAA,qKAAC,qHAAA,CAAA,UAAI;4BAAC,MAAK;4BAAS,WAAU;sCAAoC;;;;;;;;;;;;;;;;;YAOrE,sBACC,qKAAC;gBACC,KAAK;gBACL,WAAU;0BAEV,cAAA,qKAAC;oBAAI,WAAU;8BACZ,MAAM,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,iBACzB,qKAAC,qHAAA,CAAA,UAAI;4BAEH,MAAM;4BACN,WAAU;4BACV,SAAS,IAAM,QAAQ;sCAEtB;2BALI;;;;;;;;;;;;;;;;;;;;;AAarB","debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file:///Users/kimkihun/Documents/project/sense_homepage/sense-frontend/components/UploadForm.tsx"],"sourcesContent":["// components/UploadForm.tsx\nimport { useState } from \"react\";\n\ninterface Props {\n  onUploadSuccess: () => void;\n}\n\nexport default function UploadForm({ onUploadSuccess }: Props) {\n  const getCurrentDateTimeLocal = (): string => {\n    const now = new Date();\n    const offset = now.getTimezoneOffset();\n    const local = new Date(now.getTime() - offset * 60 * 1000);\n    return local.toISOString().slice(0, 16); // YYYY-MM-DDTHH:MM\n  };\n\n  const [form, setForm] = useState({\n    date: getCurrentDateTimeLocal(),\n    location: \"\",\n    sense_type: \"\",\n    keyword: \"\",\n    emotion_score: \"\",\n    description: \"\",\n  });\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const { name, value } = e.target;\n    setForm({ ...form, [name]: value });\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const res = await fetch(\"http://localhost:8000/upload\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(form),\n    });\n    if (res.ok) {\n      alert(\"성공적으로 업로드되었습니다!\");\n      setForm({\n        date: getCurrentDateTimeLocal(),\n        location: \"\",\n        sense_type: \"\",\n        keyword: \"\",\n        emotion_score: \"\",\n        description: \"\",\n      });\n      onUploadSuccess();  // ← 여기서 상위 컴포넌트에 알립니다.\n    } else {\n      alert(\"업로드 실패\");\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className=\"space-y-4 bg-gray-100 p-6 rounded shadow\"\n    >\n      <input\n        type=\"datetime-local\"\n        name=\"date\"\n        value={form.date}\n        onChange={handleChange}\n        className=\"input\"\n        required\n      />\n      <input\n        name=\"location\"\n        value={form.location}\n        onChange={handleChange}\n        placeholder=\"장소\"\n        className=\"input\"\n        required\n      />\n      <input\n        name=\"sense_type\"\n        value={form.sense_type}\n        onChange={handleChange}\n        placeholder=\"감각유형 (예: 맛, 향)\"\n        className=\"input\"\n        required\n      />\n      <input\n        name=\"keyword\"\n        value={form.keyword}\n        onChange={handleChange}\n        placeholder=\"키워드\"\n        className=\"input\"\n      />\n      <input\n        name=\"emotion_score\"\n        type=\"number\"\n        value={form.emotion_score}\n        onChange={handleChange}\n        placeholder=\"감정점수 (-5 ~ 5)\"\n        className=\"input\"\n      />\n      <textarea\n        name=\"description\"\n        value={form.description}\n        onChange={handleChange}\n        placeholder=\"감정 설명\"\n        className=\"input\"\n      />\n      <button\n        type=\"submit\"\n        className=\"bg-orange-500 text-white px-4 py-2 rounded\"\n      >\n        등록\n      </button>\n    </form>\n  );\n}\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;;AAC5B;;;AAMe,SAAS,WAAW,EAAE,eAAe,EAAS;IAC3D,MAAM,0BAA0B;QAC9B,MAAM,MAAM,IAAI;QAChB,MAAM,SAAS,IAAI,iBAAiB;QACpC,MAAM,QAAQ,IAAI,KAAK,IAAI,OAAO,KAAK,SAAS,KAAK;QACrD,OAAO,MAAM,WAAW,GAAG,KAAK,CAAC,GAAG,KAAK,mBAAmB;IAC9D;IAEA,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;QAC/B,MAAM;QACN,UAAU;QACV,YAAY;QACZ,SAAS;QACT,eAAe;QACf,aAAa;IACf;IAEA,MAAM,eAAe,CACnB;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,QAAQ;YAAE,GAAG,IAAI;YAAE,CAAC,KAAK,EAAE;QAAM;IACnC;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,MAAM,MAAM,MAAM,MAAM,gCAAgC;YACtD,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;QACvB;QACA,IAAI,IAAI,EAAE,EAAE;YACV,MAAM;YACN,QAAQ;gBACN,MAAM;gBACN,UAAU;gBACV,YAAY;gBACZ,SAAS;gBACT,eAAe;gBACf,aAAa;YACf;YACA,mBAAoB,uBAAuB;QAC7C,OAAO;YACL,MAAM;QACR;IACF;IAEA,qBACE,qKAAC;QACC,UAAU;QACV,WAAU;;0BAEV,qKAAC;gBACC,MAAK;gBACL,MAAK;gBACL,OAAO,KAAK,IAAI;gBAChB,UAAU;gBACV,WAAU;gBACV,QAAQ;;;;;;0BAEV,qKAAC;gBACC,MAAK;gBACL,OAAO,KAAK,QAAQ;gBACpB,UAAU;gBACV,aAAY;gBACZ,WAAU;gBACV,QAAQ;;;;;;0BAEV,qKAAC;gBACC,MAAK;gBACL,OAAO,KAAK,UAAU;gBACtB,UAAU;gBACV,aAAY;gBACZ,WAAU;gBACV,QAAQ;;;;;;0BAEV,qKAAC;gBACC,MAAK;gBACL,OAAO,KAAK,OAAO;gBACnB,UAAU;gBACV,aAAY;gBACZ,WAAU;;;;;;0BAEZ,qKAAC;gBACC,MAAK;gBACL,MAAK;gBACL,OAAO,KAAK,aAAa;gBACzB,UAAU;gBACV,aAAY;gBACZ,WAAU;;;;;;0BAEZ,qKAAC;gBACC,MAAK;gBACL,OAAO,KAAK,WAAW;gBACvB,UAAU;gBACV,aAAY;gBACZ,WAAU;;;;;;0BAEZ,qKAAC;gBACC,MAAK;gBACL,WAAU;0BACX;;;;;;;;;;;;AAKP","debugId":null}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":["file:///Users/kimkihun/Documents/project/sense_homepage/sense-frontend/components/EmotionChart.tsx"],"sourcesContent":["import {\n  Chart as ChartJS,\n  ArcElement,\n  Tooltip,\n  Legend,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n} from 'chart.js';\nimport { Pie, Bar } from 'react-chartjs-2';\nimport { useEffect, useState } from 'react';\n\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title);\n\ninterface Record {\n  id: number;\n  sense_type: string;\n  emotion_score: number;\n}\n\ntype RecordMap = {\n  [key: string]: number[];\n};\n\nexport default function EmotionChart() {\n  const [records, setRecords] = useState<Record[]>([]);\n\n  useEffect(() => {\n    fetch(\"/api/records\")\n      .then(async (res) => {\n        if (!res.ok) {\n          const text = await res.text();\n          throw new Error(`EmotionChart 오류: ${text}`);\n        }\n        return res.json();\n      })\n      .then((data) => setRecords(data))\n      .catch((err) => console.error(\"EmotionChart fetch error:\", err));\n  }, []);\n\n  const grouped = records.reduce((acc: RecordMap, curr) => {\n    const type = curr.sense_type;\n    if (!acc[type]) acc[type] = [];\n    acc[type].push(curr.emotion_score);\n    return acc;\n  }, {});\n\n  const labels = Object.keys(grouped);\n  const data = labels.map((label) => {\n    const scores = grouped[label];\n    const avg = scores.reduce((a, b) => a + b, 0) / scores.length;\n    return Number(avg.toFixed(2));\n  });\n\n  return (\n    <div className=\"max-w-4xl mx-auto my-10\">\n      <h2 className=\"text-xl font-bold mb-4 text-center\">감각 유형별 평균 감정 점수</h2>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n        <div>\n          <Pie\n            data={{\n              labels,\n              datasets: [\n                {\n                  label: '평균 감정점수',\n                  data,\n                  backgroundColor: [\n                    '#f87171', '#fbbf24', '#34d399', '#60a5fa', '#c084fc',\n                  ],\n                },\n              ],\n            }}\n          />\n        </div>\n        <div>\n          <Bar\n            options={{\n              responsive: true,\n              plugins: {\n                legend: { display: false },\n                title: {\n                  display: true,\n                  text: 'Bar Chart - 감정 점수 평균',\n                },\n              },\n            }}\n            data={{\n              labels,\n              datasets: [\n                {\n                  label: '평균 감정점수',\n                  data,\n                  backgroundColor: '#4f46e5',\n                },\n              ],\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAUA;AACA;;;;;;;;;;AAEA,sHAAA,CAAA,QAAO,CAAC,QAAQ,CAAC,sHAAA,CAAA,aAAU,EAAE,sHAAA,CAAA,UAAO,EAAE,sHAAA,CAAA,SAAM,EAAE,sHAAA,CAAA,gBAAa,EAAE,sHAAA,CAAA,cAAW,EAAE,sHAAA,CAAA,aAAU,EAAE,sHAAA,CAAA,QAAK;AAY5E,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAEnD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,gBACH,IAAI,CAAC,OAAO;YACX,IAAI,CAAC,IAAI,EAAE,EAAE;gBACX,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,MAAM,IAAI,MAAM,CAAC,iBAAiB,EAAE,MAAM;YAC5C;YACA,OAAO,IAAI,IAAI;QACjB,GACC,IAAI,CAAC,CAAC,OAAS,WAAW,OAC1B,KAAK,CAAC,CAAC,MAAQ,QAAQ,KAAK,CAAC,6BAA6B;IAC/D,GAAG,EAAE;IAEL,MAAM,UAAU,QAAQ,MAAM,CAAC,CAAC,KAAgB;QAC9C,MAAM,OAAO,KAAK,UAAU;QAC5B,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,GAAG,EAAE;QAC9B,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,aAAa;QACjC,OAAO;IACT,GAAG,CAAC;IAEJ,MAAM,SAAS,OAAO,IAAI,CAAC;IAC3B,MAAM,OAAO,OAAO,GAAG,CAAC,CAAC;QACvB,MAAM,SAAS,OAAO,CAAC,MAAM;QAC7B,MAAM,MAAM,OAAO,MAAM,CAAC,CAAC,GAAG,IAAM,IAAI,GAAG,KAAK,OAAO,MAAM;QAC7D,OAAO,OAAO,IAAI,OAAO,CAAC;IAC5B;IAEA,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAG,WAAU;0BAAqC;;;;;;0BACnD,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;kCACC,cAAA,qKAAC,0IAAA,CAAA,MAAG;4BACF,MAAM;gCACJ;gCACA,UAAU;oCACR;wCACE,OAAO;wCACP;wCACA,iBAAiB;4CACf;4CAAW;4CAAW;4CAAW;4CAAW;yCAC7C;oCACH;iCACD;4BACH;;;;;;;;;;;kCAGJ,qKAAC;kCACC,cAAA,qKAAC,0IAAA,CAAA,MAAG;4BACF,SAAS;gCACP,YAAY;gCACZ,SAAS;oCACP,QAAQ;wCAAE,SAAS;oCAAM;oCACzB,OAAO;wCACL,SAAS;wCACT,MAAM;oCACR;gCACF;4BACF;4BACA,MAAM;gCACJ;gCACA,UAAU;oCACR;wCACE,OAAO;wCACP;wCACA,iBAAiB;oCACnB;iCACD;4BACH;;;;;;;;;;;;;;;;;;;;;;;AAMZ","debugId":null}},
    {"offset": {"line": 530, "column": 0}, "map": {"version":3,"sources":["file:///Users/kimkihun/Documents/project/sense_homepage/sense-frontend/pages/index.tsx"],"sourcesContent":["// pages/index.tsx\nimport { useEffect, useState } from \"react\"\nimport Head from \"next/head\"\nimport Image from \"next/image\"\nimport Header from \"@/components/Header\"\nimport UploadForm from \"@/components/UploadForm\"\nimport EmotionChart from \"@/components/EmotionChart\"\n\ninterface Record {\n  id: number\n  date: string\n  location: string\n  sense_type: string\n  keyword: string\n  emotion_score: number\n  description: string\n}\n\nexport default function Home() {\n  const [records, setRecords] = useState<Record[]>([])\n  const [loading, setLoading] = useState(true)\n\n  // 데이터 가져오기\n  const fetchData = async () => {\n    setLoading(true)\n    try {\n      const res = await fetch(\"/api/records\")\n      if (!res.ok) throw new Error(await res.text())\n      const data: Record[] = await res.json()\n      setRecords(data)\n    } catch (err) {\n      console.error(\"Failed to fetch data:\", err)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  // 파생 배열 생성\n  const latestSix = [...records]\n    .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n    .slice(0, 6)\n\n  const topFive = [...records]\n    .sort((a, b) => b.emotion_score - a.emotion_score)\n    .slice(0, 5)\n\n  return (\n    <>\n      <Head>\n        <title>SENSE 데이터마켓</title>\n      </Head>\n\n      <div className=\"text-gray-800 bg-white font-sans min-h-screen\">\n        <Header />\n\n        {/* Hero 섹션 */}\n        <section className=\"bg-gray-50 py-16\">\n          <div className=\"max-w-screen-xl mx-auto px-8 text-center\">\n            <h1 className=\"text-4xl lg:text-5xl font-bold text-gray-900 mb-4\">\n              감각 기반 SENSE 데이터마켓\n            </h1>\n            <p className=\"text-lg lg:text-xl text-gray-600\">\n              감성 데이터와 AI를 연결하는 데이터 커머스 플랫폼\n            </p>\n          </div>\n        </section>\n\n        {/* Banner 섹션: public/banner.png 파일을 가져와서 표시 */}\n        <section className=\"bg-white py-8\">\n          <div className=\"max-w-screen-xl mx-auto px-8\">\n            <Image\n              src=\"/images/banner.png\"\n              alt=\"Academy 데이터 배너\"\n              width={1280}\n              height={300}\n              className=\"w-full h-auto rounded-lg\"\n            />\n          </div>\n        </section>\n\n        {/* Main 컨텐츠 */}\n        <main className=\"max-w-screen-xl mx-auto px-8 py-12 space-y-16\">\n          {/* 업로드 폼 */}\n          <section className=\"bg-white shadow-lg rounded-lg p-8\">\n            <UploadForm onUploadSuccess={fetchData} />\n          </section>\n\n          {/* 최신 데이터 (6개) */}\n          <section>\n            <h2 className=\"text-2xl font-bold text-orange-600 mb-6\">\n              최신 데이터 (최신 6개)\n            </h2>\n            {loading ? (\n              <p className=\"text-center\">불러오는 중...</p>\n            ) : latestSix.length === 0 ? (\n              <p className=\"text-center\">기록이 없습니다.</p>\n            ) : (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {latestSix.map((rec) => (\n                  <div key={rec.id} className=\"bg-gray-100 rounded-lg p-6\">\n                    <p className=\"text-sm text-gray-600\">\n                      {rec.date} – {rec.sense_type}\n                    </p>\n                    <p className=\"font-semibold text-lg mt-2\">\n                      {rec.location}\n                    </p>\n                    <p className=\"mt-1\">감정점수: {rec.emotion_score}</p>\n                    <p className=\"text-gray-700 mt-2\">{rec.description}</p>\n                  </div>\n                ))}\n              </div>\n            )}\n          </section>\n\n          {/* 감정점수 상위 5개 */}\n          <section>\n            <h2 className=\"text-2xl font-bold text-blue-600 mb-6\">\n              감정점수 상위 5개\n            </h2>\n            {loading ? (\n              <p className=\"text-center\">불러오는 중...</p>\n            ) : topFive.length === 0 ? (\n              <p className=\"text-center\">기록이 없습니다.</p>\n            ) : (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {topFive.map((rec) => (\n                  <div key={rec.id} className=\"bg-gray-100 rounded-lg p-6\">\n                    <p className=\"text-sm text-gray-600\">\n                      {rec.date} – {rec.sense_type}\n                    </p>\n                    <p className=\"font-semibold text-lg mt-2\">\n                      {rec.location}\n                    </p>\n                    <p className=\"mt-1\">감정점수: {rec.emotion_score}</p>\n                    <p className=\"text-gray-700 mt-2\">{rec.description}</p>\n                  </div>\n                ))}\n              </div>\n            )}\n          </section>\n\n          {/* 감정 차트 */}\n          <section>\n            <EmotionChart data={records} />\n          </section>\n        </main>\n\n        {/* 푸터 */}\n        <footer className=\"bg-white border-t py-8 mt-12\">\n          <div className=\"text-center text-sm text-gray-500\">\n            © 2025 SENSE. 모든 권리 보유. | 개인정보처리방침 | 이용약관\n          </div>\n        </footer>\n      </div>\n    </>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}